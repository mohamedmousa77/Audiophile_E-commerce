version: '3.8'

services:
  # SQL Server
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: audiophile-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - audiophile-network
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong@Passw0rd -Q "SELECT 1"
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    container_name: audiophile-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - audiophile-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Seq (Logging)
  seq:
    image: datalust/seq:latest
    container_name: audiophile-seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:80"
    volumes:
      - seq-data:/data
    networks:
      - audiophile-network

  # API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: audiophile-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=AudiophileDB;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=True;MultipleActiveResultSets=true
      - ConnectionStrings__Redis=redis:6379
      - JwtSettings__Secret=YourSuperSecretKeyMinimum64CharactersLongForProductionUseAzureKeyVault
      - Seq__ServerUrl=http://seq:80
    ports:
      - "5000:80"
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - audiophile-network
    restart: unless-stopped

volumes:
  sqlserver-data:
  redis-data:
  seq-data:

networks:
  audiophile-network:
    driver: bridge